1、static的作用
   1>修饰成员变量(静态变量):
      <1>属于类，在内存中只有一个(即无论有多少个实例都是指向同一个静态变量的内存地址)
      <2>实例变量属于类对象，只有类对象被创建之后才会分配空间
   2>修饰方法(静态方法):
      <1>属于类通过类名就可以调用，不可以有this、super关键字
      <2>只能访问类的静态成员变量和静态成员方法
   3>修饰代码块（静态代码块）:
      <1>在加载类时执行staitic块（只会被执行一次）
      <2>如果有多个static块会顺序执行
   4>修饰内部类:
      <1>可以不依赖与外部类实例而实例化
      <2>只能访问外部类的静态成员变量和静态方法


2、volatile的作用
   1>修饰变量，表示用到此变量时是直接从内存中取，而不是从缓存中取
   2>解决一个线程从缓存读取数据，而又有线程修改了数据而缓存却没有更新而造成的数值不一致的问题
   

3、instanceof的作用
   1>判断一个引用类型的变量是否是一个类(或接口、抽象类、父类)的实例

4、scrictfp的作用
   1>确保浮点数运算的准确性

5、try/catch/finally中的return的各种意义
   1>try/catch/fainally中都有return时返回的是finally中的return
     因为执行到try或者catch中的return时就要执行finally中的代码否则将无机会再执行
   2>如果finally中有return而try语句块外也有return那么将会报错

6、什么是不可变类
   1>创建了这个类的实例后就不允许修改它的属性的值了
   2>java类库中所有基本类型的包装类都是不可变类（如Integer、Float、String）


7、字符串创建与存储的机制是什么
   两种方式创建字符串
   1>String s = "abc";
     如果常量池中没有这个字符串就创建如果有就把它的引用（地址）给s
   2>String s1 = new String("abc");
     在堆中创建一个对象s1,如果常量池中没有abc这个字符串就在常量池中创建并把它指向s1
     如果常量池有就不创建这个字符串直接把引用给s1
   3>变量存储在栈中、字面量（存储在常量池中）、new出来的对象存储在堆中

8、==、equals和hashCode有什么区别
   1>==比较的是引用(地址)是否相同
   2>equals比较的是内容是否相等
   3>hashCod()方法是从Object中继承过来的，用来鉴定两个对象是否相等，它返回地址转换成的一个int值

9、String、StringBuffer、StringBuilder和StringTokenizer有什么区别
   1>String是不可变类有两种方式初始化，当执行连接操作时是创建一个新的空间储存连接后字符串
   2>StringBuffer是线程安全的可变类只有一种初始化方式，可以直接修改字符串内容
   3>StringBuilder是线程不安全的可变类
   4>StringTokenizer是用来分割字符串的工具类

10、数组的初始化方式有那几种
    2种:
    1>int[] a = new int[5];
    2>int[] a = {1,2,3,4,5};