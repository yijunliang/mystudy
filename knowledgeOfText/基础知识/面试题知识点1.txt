1、面向对象与面向过程的区别
   面向过程是一件事情该怎么做，比如造车所有的材料都要自己做。、
   面向对象是一件事情让谁来做，不关心做的流程只要最后这件事能完成就行了

2、面向对象有哪些特征
   1>抽象
   2>继承
   3>封装
   4>多态

3、多态的实现机制是什么（多态就是同一操作对不用对象有不同的结果）
   1>编译时多态（通过重载实现）
   2>运行时多态（通过覆盖实现）:动态绑定，运行时才知道调用那个方法
   
4、什么是继承
   finale可以阻止继承
   继承可以把一个类的非私有属性和方法传递下来(派生类可以有自己的属性和方法)，
   提高代码复用率

5、重载和覆盖的区别
   重载:
   1>重载发生在同一个类中(继承下来的类的方法，和派生类的方法可以重载)
     通过方法参数类型、参数个数、参数顺序重载
   2>不可以通过方法的返回值类型、权限、抛出异常类型重载
   3>在继承中如果基类的修饰为private那么不能在派生类中对其重载，
     在派生类中定义一个同名函数只是一个新的函数（也就是说不是private的基类可以重载）
   覆盖:
   1>覆盖发生在父子类之间，要覆盖基类的方法，
      派生的方法要和基类的方法的名字、参数、返回类型、抛出异常都一致
   2>定义为private的方法不能被覆盖
   3>final修饰的方法不能被覆盖

6、抽象类与接口的异同
   相同点:
   1>都不能被实例化
   2>如果要实例化必须实现接口中的方法或覆盖抽象类中的抽象方法
   不同点:
   1>接口中的方法都是抽象方法并且不能被private、protected、static修饰
     抽象类中除了抽象方法还可以有实现了的方法
   2>接口中的变量都是public static final的常量要初始化
     抽象类中的变量不是常量可以不必初始化默认为default
   3>接口需要实现，而抽象类只能被继承。一个类可以实现多个接口但是只能继承一个抽象类
   4>接口强调特定功能的实现，而抽象类强调所属关系

7、内部类有哪些
   1>普通内部类
   2>静态内部类
   3>局部内部类
   4>匿名内部类

8、如何获取父类的类名
   1>没有继承关系的类（普通类）通过对象.getClass().getName()获取
   2>有继承关系的类（获取父类的类名）通过Java的反射机制this.getSuperclass().getNmae()

9、this与super的区别
   this:
   1>this用于调用类的成员变量成员方法
   2>this调用其他的构造方法时要是构造方法的第一条语句
   3>当做参数传递本类的对象
   super:
   1>super用于访问到父类的成员变量和成员方法
   2>显示的访问父类的构造方法super();要放在子类构造方法的第一条语句

10、final、finally、finalize的区别
    1>final修饰属性、方法、类分别表示属性不可变(引用不可变)、方法阻止覆盖、类阻止覆盖
      final修饰参数表示这个参数在函数内部不允许被修改
    
    2>finally作为一场处理的一部分，只能位于try catch 语句中

    3>finalize是Object类的一个方法(在垃圾回收器执行前会调用被回收对象的fianalize()方法)，
      覆盖次方法实现对其他资源的回收。需要释放一个对象占用的内存，调用它的fianliez()方法
      下一次垃圾回收动作发生时才真正回收对象占用的内存。
    
   