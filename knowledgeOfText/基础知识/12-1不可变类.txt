1、要创建不可变类，要实现下面几个步骤：

   将类声明为final，所以它不能被继承

   将所有的成员声明为私有的，这样就不允许直接访问这些成员

   对变量不要提供setter方法

   将所有可变的成员声明为final，这样只能对它们赋值一次

   通过构造器初始化所有成员，进行深拷贝(deep copy)(clone可实现深复制)

   在getter方法中，不要直接返回对象本身，而是克隆对象，并返回对象的拷贝


2、对象的状态
   1>瞬时状态(transient):new的对象，只存在于内存中。
                         扩展:使用transient和static修饰的属性不能被序列化
 
   2>持久状态(psersistent):对象保存(序列化)在外存中(数据库、文件)，可以取回(反序列化)
                           hibernate的find、get、load、iterator等取回的是持久态对象
                           JDBC就是一种持久化机制。文件IO也是一种持久化机制。
                           对持久对象的操作会更新到数据库


   3>脱管状态(detached):hibernate中使用session的close、evict、clear方法后
                        和这个session关联(通过session查询到的对象)的持久对象就会变为脱管状态
                        脱管状态对象和瞬时对象本质相同，只是在数据库中有id的记录
                        使用update、updateOrSave、lock方法可以使脱管对象重新变为持久对象




3、hibernate中get和load方法的区别 
   1>get根据id查，没有数据返回null，马上发sql语句（即时加载）

   2>load根据id查，没有数据不是返回null而是抛出错误，不是马上发sql语句(延时加载)而是要用到的时候才发
     load查询返回的不是要查询的那个实体类而是一个代理类  

   网上资料:
   load方法:
    1、 首先查找session的persistent Context中是否有缓存，如果有则直接返回
    2、如果没有则判断是否是lazy，如果不是直接访问数据库检索，查到记录返回，查不到抛出异常
    3、如果是lazy则需要建立代理对象，对象的initialized属性为false，target属性为null
    4、在访问获得的代理对象的属性时,检索数据库，如果找到记录则把该记录的对象复制到代理对象的target上，
       并将initialized=true，如果找不到就抛出异常

   get方法:
       hibernate会确认一下该id对应的数据是否存在，
       首先在session缓存中查找，然后在二级缓存中查找，
       还没有就查数据库，数据库中没有就返回null。
   
   get方法返回的大部分情况下返回的是实体类，但是如果查询的是被代理过的对象则不是返回实体类
   而是返回代理对象  



4、GC常用算法
   1>引用计数法:为堆中的每个对象添加一个引用计数器
     当对象被引用时，引用计数器加一
     当对象的引用被置空时或离开作用域，引用计数器减一
  
   2>可达性分析法:jvm使用有向图维护对象的引用，
                可达性分析法是根据jvm的引用图判断对象是否可达(被引用)即
                遍历对象引用图可达的做一个标记，当遍历完没有标记的对象即为可被回收对象

   3>复制回收法

   4>压缩回收

5、HashMap的工作原理
   1>往HashMap中添加键值对时的过程:
     1、调用key的hashCode()方法生成一个hash值h1
     2、如果h1在HashMap中不存在，就把这个键值对添加进HashMap中
     3、如果h1在HashMap中存在，找出HashMap中hash值为h1的所有key
        调用key的equals()方法判断是否与要添加的key的值相等
        如果相等，key已经存在HashMap中，用新value覆盖掉原来的value
        如果不相等，key不存在HashMap中，建立新的映射关系
     4、key的hash值可能会相等(相等的两个对象hashCode一定相等，但是hashCode相等的两个对象可能不相等)
        就会产生冲突，解决冲突的方法是:开放地址法、再hash法、链地址法(hashmap使用)
